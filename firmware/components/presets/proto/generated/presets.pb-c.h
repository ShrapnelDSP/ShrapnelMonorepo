/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: presets.proto */

#ifndef PROTOBUF_C_presets_2eproto__INCLUDED
#define PROTOBUF_C_presets_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "wrappers.pb-c.h"

typedef struct PresetParameters PresetParameters;


/* --- enums --- */


/* --- messages --- */

struct  PresetParameters
{
  ProtobufCMessage base;
  Google__Protobuf__Int32Value *amp_gain;
  Google__Protobuf__Int32Value *amp_channel;
  Google__Protobuf__Int32Value *bass;
  Google__Protobuf__Int32Value *middle;
  Google__Protobuf__Int32Value *treble;
  Google__Protobuf__Int32Value *contour;
  Google__Protobuf__Int32Value *volume;
  Google__Protobuf__Int32Value *noise_gate_threshold;
  Google__Protobuf__Int32Value *noise_gate_hysteresis;
  Google__Protobuf__Int32Value *noise_gate_attack;
  Google__Protobuf__Int32Value *noise_gate_hold;
  Google__Protobuf__Int32Value *noise_gate_release;
  Google__Protobuf__Int32Value *noise_gate_bypass;
  Google__Protobuf__Int32Value *chorus_rate;
  Google__Protobuf__Int32Value *chorus_depth;
  Google__Protobuf__Int32Value *chorus_mix;
  Google__Protobuf__Int32Value *chorus_bypass;
  Google__Protobuf__Int32Value *wah_position;
  Google__Protobuf__Int32Value *wah_vocal;
  Google__Protobuf__Int32Value *wah_bypass;
};
#define PRESET_PARAMETERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&preset_parameters__descriptor) \
, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


/* PresetParameters methods */
void   preset_parameters__init
                     (PresetParameters         *message);
size_t preset_parameters__get_packed_size
                     (const PresetParameters   *message);
size_t preset_parameters__pack
                     (const PresetParameters   *message,
                      uint8_t             *out);
size_t preset_parameters__pack_to_buffer
                     (const PresetParameters   *message,
                      ProtobufCBuffer     *buffer);
PresetParameters *
       preset_parameters__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   preset_parameters__free_unpacked
                     (PresetParameters *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PresetParameters_Closure)
                 (const PresetParameters *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor preset_parameters__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_presets_2eproto__INCLUDED */
